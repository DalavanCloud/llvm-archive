Building llvm-gcc4 from source:

This is only well tested on Darwin/PowerPC and Darwin/X86 at the moment, but 
should work on other platforms as well.  Patches to make it more general are
appreciated, as are bug reports!

Check out LLVM from CVS, then build it in optimized mode (a Release build,
as opposed to a Debug one)):

  make ENABLE_OPTIMIZED=1

If you use a Debug instead of a Release build of LLVM, make sure you add
--enable-checking to the configure flags below or llvm-gcc4 will not build!

Below we assume the LLVM OBJDIR is $LLVMOBJDIR.  

Target-specific configure options:

  * On Darwin/PPC or Darwin/X86, you can enable Objective C:
      EXTRALANGS=,objc,obj-c++

  * On Darwin/X86, you should set:
      TARGETOPTIONS=--with-arch=pentium-m --with-tune=prescott
    to match Apple's GCC.

  * On Linux, until http://llvm.org/PR821 is fixed, you should 
    configure with --disable-threads.  This fixes problems linking
    libgcc.so.1 with undefined references to pthread_*.

  * On Linux, if llvm-gcc doesn't build right, try building LLVM with
    OPTIMIZE_OPTION=-O2.  This may be host compiler version specific.

Build Options:

  * If you want LLVM to include an identifying marker in the --version
    output, build llvm-gcc with LLVM_VERSION_INFO=XXX.  For example,
    to build the LLVM 1.8 Release front-end, use
    'make LLVM_VERSION_INFO=1.8'.  This will cause the front-end to
    print: gcc (GCC) 4.0.1 LLVM (Apple Computer, Inc. build 1.8)
    as the version number.

Next, make an object directory and install directory as siblings to the 
llvm-gcc source directory, and build and install llvm-gcc:

$ mkdir llvm-gcc
$ cd llvm-gcc
$ tar zxvf llvm-gcc4-x.y.source.tar.gz
$ mkdir obj
$ mkdir install
$ cd obj
$ ../llvm-gcc4-x.y.source/configure --prefix=`pwd`/../install --enable-llvm=$LLVMOBJDIR --enable-languages=c,c++$EXTRALANGS $TARGETOPTIONS
$ make  [[BUILDOPTIONS, see above]]
$ make install

Note that if you prefer to bootstrap llvm-gcc (so that the final llvm-gcc 
executables have been compiled with llvm-gcc itself), replace "make" with
"make bootstrap".

Finally, add symlinks for llvm-gcc and llvm-g++ to your path:

$ su
$ cd /usr/local/bin
$ ln -s <llvmgccdir>/install/bin/gcc llvm-gcc
$ ln -s <llvmgccdir>/install/bin/g++ llvm-g++
$ exit

You should now have something like:

$ llvm-gcc -v
...
gcc version 4.0.1 LLVM (Apple Computer, Inc. build 5400)


** NOTE: If the -v line above doesn't include "LLVM", you probably mistyped the
--enable-llvm=xxx line and have a normal gcc, not an llvm-gcc.

